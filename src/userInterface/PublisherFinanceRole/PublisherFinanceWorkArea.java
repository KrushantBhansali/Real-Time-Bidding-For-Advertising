/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package userInterface.PublisherFinanceRole;

import business.EcoSystem;
import business.Organization.AdvertiserFinance;
import business.Organization.Organization;
import business.Organization.PublisherFinance;
import business.WorkQueue.GenerateInvoice;
import business.WorkQueue.MakePayment;
import business.WorkQueue.WorkRequest;
import business.enterprise.Advertiser;
import business.enterprise.Publisher;
import business.userAccount.UserAccount;
//import com.db4o.cs.internal.messages.Message;
import java.awt.CardLayout;
import javax.mail.PasswordAuthentication;
//import sun.rmi.transport.Transport;
import java.util.*;
import javax.mail.Message;
import java.util.Properties;
import javax.activation.*;
import javax.mail.MessagingException;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;



/**
 *
 * @author Krush
 */
public class PublisherFinanceWorkArea extends javax.swing.JPanel {

    /**
     * Creates new form PublisherFinanceWorkArea
     */
    private JPanel userProcessContainer;
    private UserAccount userAccount;
    private PublisherFinance  organization;
    private Publisher enterprise;
    private EcoSystem system;
    private Advertiser a;
    public PublisherFinanceWorkArea(JPanel userProcessContainer,UserAccount userAccount,PublisherFinance organization,Publisher enterprise,EcoSystem system) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.userAccount = userAccount;
        this.organization = organization;
        this.enterprise = enterprise;
        this.system =system;
        populateTable();
                
    }
      
    public void populateTable(){
        DefaultTableModel dtm = (DefaultTableModel) financejTable1.getModel();
        dtm.setRowCount(0);
        
        for(WorkRequest request: organization.getWorkQueue().getWorkRequestList()){
            if(request instanceof GenerateInvoice){
                GenerateInvoice invoiceReq = (GenerateInvoice) request;
                Object row[] = new Object[3];
                row[0]= invoiceReq;
                
                a = (Advertiser) invoiceReq.getEnterprise();
                row[1]= invoiceReq.getInvoiceAmnt();
              //  String result = invoiceReq.getApproval();
                 // row[2] = result == null ? "Payment Not Received" : result;
                row[2]= invoiceReq.getStatus();
                dtm.addRow(row);
            }
        }
        
        
        
        
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        financejTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        generateInvoicetjButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        requestPaymentjButton1 = new javax.swing.JButton();

        financejTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Advertiser Name", "Total Amount", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(financejTable1);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Publisher Finance Work Area");

        generateInvoicetjButton1.setText("Generate Invoice");
        generateInvoicetjButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generateInvoicetjButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("<< Back");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        requestPaymentjButton1.setText("Request Payment");
        requestPaymentjButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                requestPaymentjButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(203, 203, 203)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(71, 71, 71)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton2)
                                .addGap(87, 87, 87)
                                .addComponent(generateInvoicetjButton1)
                                .addGap(41, 41, 41)
                                .addComponent(requestPaymentjButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(85, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jLabel1)
                .addGap(35, 35, 35)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(86, 86, 86)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(generateInvoicetjButton1)
                    .addComponent(jButton2)
                    .addComponent(requestPaymentjButton1))
                .addContainerGap(133, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void generateInvoicetjButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generateInvoicetjButton1ActionPerformed
        // TODO add your handling code here:
        
          int selectedRow = financejTable1.getSelectedRow();
        
          
          
        if(selectedRow<0){
            JOptionPane.showMessageDialog(null,"Please Select a Row");
            return;
        }
        
        GenerateInvoice invoiceReq = (GenerateInvoice) financejTable1.getValueAt(selectedRow,0);
        invoiceReq.setStatus("Invoice Generated, and Sent");
        populateTable();
        
        
      // File Name SendEmail.java



      final String user = "krushantauction@gmail.com";
       final String pass = "aedauction";
     // final String password = "krush*bhansali07";
      // Recipient's email ID needs to be mentioned.
      String to = invoiceReq.getAdvemail();

      // Sender's email ID needs to be mentioned
     // String from = "krushantbhansali@gmail.com";
         String from =  "krushantauction@gmail.com";
      // Assuming you are sending email from localhost
     // String host = "localhost";

      // Get system properties
     // Properties properties = System.getProperties();

      // Setup mail server
     // properties.setProperty("mail.smtp.host", host);
      
     // properties.put("mail.smtp.port", 587);
      

      // Get the default Session object.
      //Session session = Session.getDefaultInstance(properties);
       // String host="mail.javatpoint.com";
      Properties props = new Properties();  
    // props.put("mail.smtp.host", "smtp.yahoo.com");
 // props.put("mail.smtp.host", host);  
   props.put("mail.smtp.auth", "true");  
   props.put("mail.smtp.host", "smtp.gmail.com");

        props.put("mail.smtp.starttls.enable", "true");

        props.put("mail.smtp.auth", "true");

        props.put("mail.smtp.port", "587");
     
   Session session = Session.getDefaultInstance(props,  
    new javax.mail.Authenticator() {  
      protected PasswordAuthentication getPasswordAuthentication() {  
    return new PasswordAuthentication(user,pass);  
      }  
    });  

      try{
         // Create a default MimeMessage object.
         MimeMessage message = new MimeMessage(session);

         // Set From: header field of the header.
         message.setFrom(new InternetAddress(from));

         // Set To: header field of the header.
         message.addRecipient(Message.RecipientType.TO,
                                  new InternetAddress("krushantbhansali@yahoo.com"));

         // Set Subject: header field
         message.setSubject("Invoice Payment For Bid Won at " +invoiceReq.getPosition() + "position");

         // Now set the actual message
         message.setText("Your Comapny " + invoiceReq.getEnterprise()+ " is due amount of " +invoiceReq.getInvoiceAmnt()+ "$ for the above mentioned bid,won at our website"
          +invoiceReq.getPublisherName()  + " Please pay the amount within 7 days of generating this inovice");

         // Send message
         Transport.send(message);
         System.out.println("Sent message successfully....");
         
               
       // EmailUtil.sendEmail(session, emailID,"SimpleEmail Testing Subject", "SimpleEmail Testing Body");
    
      }catch (MessagingException mex) {
         mex.printStackTrace();
      }

 


        
    }//GEN-LAST:event_generateInvoicetjButton1ActionPerformed

    private void requestPaymentjButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_requestPaymentjButton1ActionPerformed
        // TODO add your handling code here:
        
            int selectedRow = financejTable1.getSelectedRow();
        
        if(selectedRow<0){
            JOptionPane.showMessageDialog(null,"Please Select a Row");
            return;
        }
        
        
        
        
        GenerateInvoice invoiceReq = (GenerateInvoice) financejTable1.getValueAt(selectedRow,0);
        
        if(invoiceReq.getStatus() != "Invoice Generated"){
            JOptionPane.showMessageDialog(null,"Please Generate a Invoice first!!");
            return;
        }
        
        
        
        
        
        
        
        invoiceReq.setStatus("Invoice Sent,Awaiting Payment");
      // invoiceReq.setApproval("Payemnt to be done");
        
        MakePayment payment = new MakePayment();
       /* invoiceReq.setInvoiceAmnt(invoiceReq.getInvoiceAmnt());
         invoiceReq.setPublisherName(enterprise.getName());
        invoiceReq.setAdvStatus("Amount to be Paid");
       
        */
        payment.setAmountDue(invoiceReq.getInvoiceAmnt());
        payment.setPublisherName(enterprise.getName());
        payment.setStatus("Amount to be paid");
        payment.setGenInv(invoiceReq);
        AdvertiserFinance adf = null;
        //for(WorkRequest request: organization.getWorkQueue().getWorkRequestList()){
            //if(request instanceof GenerateInvoice){
                a = (Advertiser) invoiceReq.getEnterprise();
            for(Organization org : a.getOrganizationDir().getOrganizationList()){
              if(org instanceof AdvertiserFinance){
                  adf = (AdvertiserFinance) org;
                  
              }
          }
            if(adf != null){
              adf.getWorkQueue().getWorkRequestList().add(payment);
              populateTable();
          }
            
          //  }
      //  }
         /* for(Organization org : a.getOrganizationDir().getOrganizationList()){
              if(org instanceof AdvertiserFinance){
                  adf = (AdvertiserFinance) org;
                  
              }
          }
          
          if(adf != null){
              adf.getWorkQueue().getWorkRequestList().add(payment);
              populateTable();
          }
        */
    }//GEN-LAST:event_requestPaymentjButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        
          userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_jButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable financejTable1;
    private javax.swing.JButton generateInvoicetjButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton requestPaymentjButton1;
    // End of variables declaration//GEN-END:variables
}
